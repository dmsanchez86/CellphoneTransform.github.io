//
//
// Global Functions
// Developer By Daniel M. SÃ¡nchez
//
//

// Function to set all prefixes
@mixin prefixes($property, $value) {
    -webkit-#{$property} : $value;
     -khtml-#{$property} : $value;
       -moz-#{$property} : $value;
        -ms-#{$property} : $value;
         -o-#{$property} : $value;
            #{$property} : $value;
}

// Function to align items to center --- display flex
@mixin align-items($value) {
  -webkit-align-items: $value;
  -moz-align-items: $value;
  -ms-align-items: $value;
  -o-align-items: $value;
  align-items: $value;
}

// Function to set animation
@mixin animation($value) {
  @include prefixes(animation, $value);
}

// Function to set direction animation
@mixin animation-direction($value){
  @include prefixes(animation-direction, $value);
}

// Function to set delay animation
@mixin animation-delay($value){
  @include prefixes(animation-delay, $value);
}

// Funtion to start or pause animation
@mixin animation-play-state($value){
  @include prefixes(animation-play-state, $value);
}

// function to fill animation mode
@mixin animation-fill-mode($value){
  @include prefixes(animation-fill-mode, $value);
}

// Function to set border radius
@mixin border-radius($radius) {
  @include prefixes(border-radius, $radius);
}

// Funtion to set box-shadow
@mixin box-shadow($value) {
  @include prefixes(box-shadow , $value);
}

// Function to set box sizing
@mixin box-sizing($value) {
  @include prefixes(box-sizing , $value);
}

// Function to create style button
@mixin button(){
    button{
        background: $lima;
        border: thin solid $lima;
        display: inline-block;
        margin: 1rem 0 0 0;
        padding: .5rem 1rem;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 1px;

        @include transition(all .25s ease);

        &:hover{
            background: rgba(255,255,255,0);
            color: $lima;
        }
    }
}

// function to center any tag absolute
@mixin center-absolute($position){
  position: $position;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

// Function to set element how flex
@mixin flex($value){
  display: -webkit-#{$value};
  display: -moz-#{$value};
  display: -ms-#{$value};
  display: -o-#{$value};
  display: $value;
}

// Function to set element how flex-item
@mixin flex-item($value){
  -webkit-flex: $value;
  -moz-flex: $value;
  -ms-flex: $value;
  -o-flex: $value;
  flex: $value;
}

// Function to set direction to item with display flex
@mixin flex-direction($value){
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  -o-flex-direction: $value;
  flex-direction: $value;
}

// Function to set filter any item
@mixin filter($value){
  -webkit-filter: $value;
  -moz-filter: $value;
  -ms-filter: $value;
  -o-filter: $value;
  filter: $value;
}

// Function to set gradient
@mixin gradient($direction, $value){
  background-image: -webkit-#{$direction}-gradient($value);
  background-image:  -khtml-#{$direction}-gradient($value);
  background-image:    -moz-#{$direction}-gradient($value);
  background-image:     -ms-#{$direction}-gradient($value);
  background-image:      -o-#{$direction}-gradient($value);
  background-image:         #{$direction}-gradient($value);
}

// function to init body and html
@mixin init{
  width: 100%;
  height: 100%;
  display: block;
}

// Function to justify items to center display flex
@mixin justify-content($value) {
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  -ms-justify-content: $value;
  -o-justify-content: $value;
  justify-content: $value;
}

// Funtion to set perspective
@mixin perspective($value) {
  @include prefixes(perspective, $value);
}

// Funtion to set perspective-origin
@mixin perspective-origin($value) {
  @include prefixes(perspective-origin, $value);
}

// Function to reset html
@mixin reset{
    border: 0;
    margin: 0;
    padding: 0;
}

// Funtion to set font Roboto
@mixin roboto($size, $weight){
  font-family: 'Roboto', sans-serif;
  font-size: $size;
  font-weight: $weight;
}

// Funtion to set text shadow
@mixin text-shadow($value) {
  @include prefixes(text-shadow , $value);
}

// Funtion to set differerents themes to body
@mixin themes(){
  &.theme2{
    @include gradient(radial, (#e3f2fd , #90caf9));

    .clock{
      border: solid ($clock / 30) #90caf9 ;
      background-image: url(../img/js_clock.png);
      background-position: 0;
      background-color: white;

      &:after{
        display: block;
      }

      .hours,
      .minutes,
      .seconds{
        @include border-radius(30% 30% 0 0);
      }

      .point,
      .seconds{   
        background: $dark_blue ;    
      }

      .hours,
      .minutes{
        @include box-shadow(0 0 1px $dark_blue);
      }

      .numbers{

        .number{
          color: $black;
          background: white;
          font-size: 30px;
          padding: 0 .5rem ; 
          font-family: 'Signika', sans-serif;
          @include text-shadow(0 0 1px #ccc);

          &._6{
            bottom: 9px;
          }

          &._3,
          &._9{
            padding: .5rem 0;
          }
        }
      }

      &.small{
        .numbers{
          .number{
            width: 25px;
            height: 25px;
            font-size: 25px;

            &._12{
              top: 5px;
            }

            &._12,
            &._6{
              padding: 0 .5rem;
            }

            &._3,
            &._9{
              padding: .2rem 0 .5rem;
            }
          }
        }
      }

      &.big{
        .numbers{
          .number{
            font-size: 36px;

            &._12{
              top: 16px;
            }
          }
        }
      }

      .config{
        .item{

          &:hover{
            background: $dark_blue;
          }

          .submenu{

            ul{

              li{

                &.active,
                &:hover{
                  background: $dark_blue;
                }
              }
            }
          }
        }
      }
    }

    .current_date{

      span{
        color: $dark_blue;
        @include text-shadow(none);
      }

      .face{
        background: $dark_blue;
      }
    }

    .loader{
      @include gradient(radial, (#e3f2fd , #90caf9));

      &.loaded{
        .porcentage{
          @include box-shadow(none);
          @include gradient(radial, (#e3f2fd , #90caf9));
        }
      }
    }
  }
  &.theme3{
    @include gradient(radial, (#c8e6c9 , #43a047));

    .clock{
      border: solid ($clock / 30) $dark_green ;
      background: white;
      @include box-shadow((0 0 15px 1px rgba(0,0,0,7), 0 0 4px 1px rgba(0,0,0,7) inset));

      &:after{
        display: block;
      }

      .point,
      .seconds{   
        background: $dark_green;    
      }

      .numbers{

        .number{
          color: $black;
          background: white;
          font-family: 'Kreon', serif;
          font-size: 32px;
          @include text-shadow(0 0 1px #ccc);

          &._6{
            bottom: 9px;
          }

          &._3,
          &._9{
            padding: .5rem 0;
          }
        }
      }

      .config{
        .item{

          &:hover{
            background: $dark_green;
          }

          .submenu{

            ul{

              li{

                &.active,
                &:hover{
                  background: $dark_green;
                }
              }
            }
          }
        }
      }

      &.small{
        .numbers{
          .number{
            width: 25px;
            height: 25px;
            font-size: 25px;

            &._12{
              top: 5px;
            }

            &._12,
            &._6{
              padding: 0 .5rem;
            }

            &._3,
            &._9{
              padding: .2rem 0 .5rem;
            }
          }
        }
      }

      &.big{
        .numbers{
          .number{
            font-size: 36px;

            &._12{
              top: 16px;
            }
          }
        }
      }
    }

    .current_date{

      span{
        color: $dark_green;
        @include text-shadow(none);
      }

      .face{
        background: $dark_green;
      }
    }

    .loader{
      @include gradient(radial, (#c8e6c9 , #43a047));

      &.loaded{
        .porcentage{
          @include box-shadow(none);
          @include gradient(radial, (#c8e6c9 , #43a047));
        }
      }
    }
  }
  &.theme4{
    @include gradient(radial, (#ffecb3 , #ffd54f ));

    .clock{
      border: solid ($clock / 30 + 5) $dark_orange ;
      background-image: url(../img/html.png);
      background-position: 0;
      background-color: white;
      border-color: #ffd54f;
      @include box-shadow((0 0 7px rgba(0,0,0,.4),0 0 7px rgba(0,0,0,.4) inset));

      .point,
      .seconds{   
        background: $dark_orange;   
      }

      .hours,
      .minutes,
      .seconds{
        @include border-radius(30% 30% 0 0);
      }

      .numbers{

        .number{
          color: $black;
          background: transparent;
          @include text-shadow(0 0 1px #ccc);
          font-family: 'Signika', sans-serif;
          font-weight: 600;
          @include text-shadow(0 0 1px #ccc);

          &._6{
            bottom: 9px;
          }

          &._3,
          &._9{
            padding: .5rem 0;
          }
        }
      }

      &.small{
        .hours,
        .minutes{
          width: 3px;
        }
      }

      .config{
        .item{

          &:hover{
            background: $dark_orange;
          }

          .submenu{

            ul{

              li{

                &.active,
                &:hover{
                  background: $dark_orange;
                }
              }
            }
          }
        }
      }
    }

    .current_date{

      span{
        color: $dark_orange;
        @include text-shadow(none);
      }

      .face{
        background: $dark_orange;
      }
    }

    .loader{
      @include gradient(radial, (#ffecb3 , #ffd54f ));

      &.loaded{
        .porcentage{
          @include box-shadow(none);
          @include gradient(radial, (#ffecb3 , #ffd54f ));
        }
      }
    }
  }
}

// Funtion to set transition
@mixin transition($value) {
  @include prefixes(transition, $value);
}

// Function to set transforms
@mixin transform($value){
    @include prefixes(transform, $value);
}

// Function to set transform-origin
@mixin transform-origin($value){
    @include prefixes(transform-origin, $value);
}

// Function to set transform-style
@mixin transform-style($value){
    @include prefixes(transform-style, $value);
}
@mixin block-cellphone($orientation){
  border: 15px solid #111;
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 11;
  @include gradient(linear, ( left, #323232, #111, #323232));
  @include border-radius(5px);
  @include box-shadow((0 0 17px rgb(0, 0, 0), 0px 0px 2px rgba(255, 255, 255, 0.18) inset));
  @include transform( translatez(0px) translatex(0px) scaleX(1) rotatey(0) );
  @include transform-style(preserve-3d);

  @if $orientation == 'portrait'{
    // change variables
    $width-cellphone : 320px;
    $height-cellphone: 480px;

    height: $height-cellphone;
    width: $width-cellphone;
    border-bottom-width: 50px;


    @include transition(( 
                          height .25s ease,
                          width .25s ease,
                          border-bottom-width .5s ease, 
                          border-color .51s linear,
                          transform 1s ease-in-out,
                          box-shadow 1s ease
                        )) ;

    &:after,
    &:before{
      bottom: -40px;
      left: 0;
      right: 0;
    }

    > div{
      left: 0;
      height: $height-cellphone;
      position: absolute;
      top: 0;
      width: $width-cellphone;
      opacity: 0;
      @include transform(rotatex(0) translatez(0px));
    }

    &.active{
      border-bottom-width: 50px;

      &:before{
        bottom: -33px;
        width: 16px;
        height: 16px;
      }

      // six sides
      .back{
          background-color: #212121;
          @include transform(translatez( -($height-cellphone / 2)));
          @include transition((
            transform .15s ease-out,
            opacity .5s .4s ease-out
          ));
      }
      .front{
          opacity: 1;
          @include transition((
            opacity .25s 1s ease-out
          ));
      }
      .bottom{
          background-color: #323232;
          @include transform(rotatex(-90deg) translatez(($height-cellphone / 2)) translatey(($height-cellphone / 2)));
          @include transition( all .15s .3s ease-out );
      }
      .top{
          background-color: #323232;
          @include transform(rotatex(90deg) translatez(($height-cellphone / 2)) translatey(-($height-cellphone / 2)));
          @include transition( all .15s .3s ease-out );
      }
      .right{
          background-color: #424242;
          @include transform(rotatey(90deg) translatez(($width-cellphone / 2)) translatex(($width-cellphone / 2)));
          @include transition( all .35s .4s ease-out );
      }
      .left{
          background-color: #424242;
          @include transform(rotatey(-90deg) translatez(($width-cellphone / 2)) translatex(-($width-cellphone / 2)));
          @include transition( all .35s .4s ease-out );
      }
    }
  }@else{
    // change variables
    $width-cellphone : 480px;
    $height-cellphone: 320px;

    height: $height-cellphone;
    width: $width-cellphone;
    border-right-width: 50px;

    @include transition((
                        height .25s ease,
                        width .25s ease,
                        border-right-width .5s ease, 
                        border-color .5s linear,
                        transform 1s ease-in-out,
                        box-shadow 1s ease
                      )) ;

    &:after,
    &:before{
      bottom: 0;
      right: -8%;
      top: 0;
    }

    > div{
      left: 0;
      height: $height-cellphone;
      position: absolute;
      top: 0;
      width: $width-cellphone;
      opacity: 0;
      @include transition(all .5s ease-out);
      @include transform(rotatex(0) translatez(0px));
    }

    &.active{
      border-right-width: 50px;

      &:before{
        bottom: -1.5px;
        width: 16px;
        height: 16px;
        right: -6.5%;
        left: initial;
      }

      // six sides
      .back{
          background-color: #212121;
          @include transform(translatez( -($height-cellphone / 2)));
          @include transition((
            transform .15s ease-out,
            opacity .5s .4s ease-out
          ));
      }
      .front{
          opacity: 1;
          @include transition((
            opacity .25s 1s ease-out
          ));
      }
      .bottom{
          background-color: #323232;
          @include transform(rotatex(-90deg) translatez(($height-cellphone / 2)) translatey(($height-cellphone / 2)));
          @include transition( all .15s .3s ease-out );
      }
      .top{
          background-color: #323232;
          @include transform(rotatex(90deg) translatez(($height-cellphone / 2)) translatey(-($height-cellphone / 2)));
          @include transition( all .15s .3s ease-out );
      }
      .right{
          background-color: #424242;
          @include transform(rotatey(90deg) translatez(($width-cellphone / 2)) translatex(($width-cellphone / 2)));
          @include transition( all .35s .4s ease-out );
      }
      .left{
          background-color: #424242;
          @include transform(rotatey(-90deg) translatez(($width-cellphone / 2)) translatex(-($width-cellphone / 2)));
          @include transition( all .35s .4s ease-out );
      }
    }

    .button_start{
      bottom: 0!important;
      right: -40px!important;
      top: 0;
      left: initial!important;
    }
  }
  
  .front{
      opacity: 0;
      overflow: hidden;
      
      img{
          height: auto;
          max-width: 100%;
          margin-top: 6rem;
      }
      iframe{
          height: 100%;
          width: 100%;
      }
  }

  .back{
    @include gradient(linear, ( left, #323232, #111, #323232));
  }
  
  &.active{
      background: transparent;
      overflow: visible;
      //border-color: $cellphone-active;
      @include transform( translatez(-380px) translatex(30px) scaleX(1) rotatey(0deg) rotatex(0deg) rotatez(0deg));
      
      > div{
          opacity: 1;
      }

      .button_start{
        background: transparent;
        @include box-shadow(0 0 6px 1px rgba(255,255,255,.5));

        &:before{
          background: rgba(255,255,255, .5);
          opacity: 1;   
        }
        
        &:hover{
          @include box-shadow(0 0 4px 1px rgb(255,255,255));

          &:before{
            opacity: 1;
          }
        }
      }
  }

  .button_start{
    position: absolute;
    bottom: -40px;
    margin: auto;
    left: 0;
    right: 0;
    width: 33px;
    height: 33px;
    cursor: pointer;
    background: #111;
    @include box-shadow(0 0 2px 1px rgb(70,70,70));
    @include border-radius(50%);
    @include transition(all .25s ease);

    &:before{
      background: rgba(70,70,70, .5);
      width: 50%;
      height: 50%;
      content: '';
      opacity: 0;
      @include center-absolute(absolute);
      @include border-radius(50%);      
      @include transition(opacity .5s ease);      
    }

    &:focus{
      outline: none;
    }
    
    &:hover{
      @include box-shadow(0 0 4px 1px rgb(70,70,70));

      &:before{
        opacity: 1;
      }
    }
  }
}